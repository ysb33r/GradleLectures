buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.ysb33r.gradle:vfs-gradle-plugin:1.0-beta3'
    classpath 'commons-httpclient:commons-httpclient:3.1'
   }
}

plugins {
    id 'com.github.jruby-gradle.base' version '1.1.4'
    id 'org.ysb33r.vfs' version '1.0-beta6'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.ysb33r.ivypot' version '0.3.7'

}

version = '1.0-MkJugMar2016'

ext {

    downloadDir = "${buildDir}/download"
    revealjsVersion = 'master'
    revealjsTemplateVersion = 'master'
    revealjsDir = new File(downloadDir,'reveal.js')
    revealjsTemplateDir = new File(downloadDir,'revealjs-backends/revealjs')

    repositoryFolder = file('.repository')
    distFolder = file('.repository/dists')
}

repositories {
    jcenter()
}

configurations {
    examples
    zinc
}


dependencies {
    examples 'junit:junit:4.1'
    examples 'org.scala-lang:scala-library:2.11.8'
    examples 'org.scala-lang:scala-compiler:2.11.8'
    examples 'org.codehaus.groovy:groovy-all:2.4.3'
    examples 'org.spockframework:spock-core:1.0-groovy-2.4'
//    examples 'com.typesafe.sbt:compiler-interface:0.13.7'
    zinc "com.typesafe.zinc:zinc:${org.gradle.language.scala.internal.toolchain.DefaultScalaToolProvider.DEFAULT_ZINC_VERSION}"
}



task download << {
    mkdir downloadDir
    vfs {
        if(!revealjsDir.exists()) {
            cp "zip:https://github.com/hakimel/reveal.js/archive/${revealjsVersion}.zip!reveal.js-${revealjsVersion}",
                revealjsDir, recursive: true, overwrite: true
        }
        if(!revealjsTemplateDir.exists()) {
            cp "zip:https://github.com/asciidoctor/asciidoctor-reveal.js/archive/${revealjsTemplateVersion}.zip!asciidoctor-reveal.js-${revealjsTemplateVersion}/templates/slim",
                revealjsTemplateDir, recursive: true, overwrite: true
        }
    }
}

download {
    outputs.dir revealjsDir
    outputs.dir revealjsTemplateDir
}

asciidoctor {
    if (!buildDir.exists()) {
        dependsOn jrubyPrepare
        dependsOn download
    }

    gemPath = jrubyPrepare.outputDir
//  requires = ['asciidoctor-diagram']
    sources {
        include 'Gradle45min.adoc'
    }

    resources {
        from(sourceDir) {
            include 'images/**'
            include 'styles/**'
            include 'snippets/**'
        }

        from(downloadDir) {
            include 'reveal.js/**'
            include 'asciidoctor-reveal.js/**'
        }
    }

    attributes 'sourcedir': file('examples'),
        imagesoutdir: 'images',
        'source-highlighter': 'coderay',
        gradlever: gradle.gradleVersion

    backends 'revealjs'

    options template_dirs: [revealjsTemplateDir.parentFile.absolutePath]
}

syncRemoteRepositories {

    inputs.properties 'foo' : configurations.examples

    repoRoot repositoryFolder

    repositories {
        jcenter()
        mavenCentral()
    }

    configurations 'examples','zinc'

    includeBuildScriptDependencies = false

    repoArtifactPattern = '[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier])(.[ext])'
    repoIvyPattern = '[organisation]/[module]/[revision]/ivy-[revision].xml'

}

build.dependsOn asciidoctor

[ 'jvm-scala','jvm-groovy' ].each { projName ->
    String taskName = "example-${projName}"
    tasks.create( taskName,GradleBuild) {
        dir = file("examples/${projName}")
        buildFile = "${dir}/build.gradle"
        tasks = ['build']
//        startParameter = gradle.startParameter.newBuild()
    }
    build.dependsOn taskName
}

