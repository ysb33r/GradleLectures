plugins {
    id 'org.asciidoctor.convert' version '1.5.3'
}

apply from : 'repositories.gradle'


//ext {
//    repoDir = file("${rootProject.projectDir}/.repository")
//}

////if(repoDir.exists()) {
////
////    buildscript {
////        dependencies {
////            classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.5.3"
////        }
////    }
////
//}


version '1.0.0-DevoxxMA-2016'

ext {
    exercises = [
        'copy-files'
    ]
}

task workshopSolutionTest {
    group 'Workshop Preparation'
    description 'Test all of the exercises'
}
exercises.each { exercise ->
    workshopSolutionTest.dependsOn (tasks.create (exercise, GradleBuild) {
        group 'Workshop Preparation'
        description "Tests required tasks in the '${exercise}' exercise"
        tasks = [ 'workshoptest']
        dir = file("exercises/${exercise}")
        buildFile = file("exercises/${exercise}/solution.gradle")
        startParameter.projectCacheDir = file("${projectDir}/exercises/${exercise}/.gradle")
    })
}

//task bootstrapOfflineRepository( type : GradleBuild ) {
//    group "Workshop Initialisation"
//    description "Downloads all dependencies to an offline repository"
//    enabled = !gradle.startParameter.isOffline()
//
//    tasks = ['syncRemoteRepositories']
//    dir = file("gradle/bootstrapOffline")
//    buildFile = file("gradle/bootstrapOffline/build.gradle")
//    startParameter.projectCacheDir = file("${projectDir}/gradle/bootstrapOffline/.gradle")
//}

//if(repoDir.exists()) {


    repositories {
//        ivy {
//            url repoDir.toURI()
//            layout 'gradle'
//        }
        jcenter()
    }

    asciidoctor {
      sources {
        include 'GradleWorkshop.adoc'
          include 'copy.adoc'
      }

      resources {
        from(sourceDir) {
          include 'images/**'
          include 'styles/**'
          include 'snippets/**'
        }

      }

       attributes 'exercises' : file('exercises'),
                  imagesoutdir : 'images',
                  'source-highlighter' : 'coderay',
                  gradlever : gradle.gradleVersion


        backends 'html5'

    }

//}


//task distZip ( type : Zip ) {
//    destinationDir buildDir
//    archiveName 'GradleWorkshop.zip'
//    from projectDir, {
//        include 'src/**'
//        include 'examples/**'
//        include '.repository/**'
//        include 'dists/**'
//        exclude 'examples/*/build'
//        exclude 'examples/*/.gradle'
//    }
//
//    include 'build.gradle'
//    include 'gradle'
//    include 'gradlew*'
//    include 'README.adoc'
//}


