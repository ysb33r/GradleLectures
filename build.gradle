buildscript {
  repositories {
    jcenter()

    maven {
          url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
    classpath 'com.github.jruby-gradle:jruby-gradle-plugin:0.1.5'
    classpath 'org.ysb33r.gradle:vfs-gradle-plugin:1.0-beta3'
    classpath 'commons-httpclient:commons-httpclient:3.1'
//    classpath 'org.ysb33r.gradle:ivypot:0.3.4'
   }
}

apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'org.ysb33r.vfs'
apply plugin: 'org.asciidoctor.convert'
//apply plugin: 'org.ysb33r.ivypot'

version = '1.0.0'

ext {

    downloadDir = "${buildDir}/download"
    revealjsVersion = 'master'
    revealjsTemplateVersion = 'master'
    revealjsDir = new File(downloadDir,'reveal.js')
    revealjsTemplateDir = new File(downloadDir,'revealjs-backends/revealjs')

//    repositoryFolder = file('.repository')
//    distFolder = file('.repository/dists')
//
//    slf4jVersion = '1.7.12'

}

repositories {
  jcenter()
}


task download << {
    mkdir downloadDir
    vfs {
        if(!revealjsDir.exists()) {
            cp "zip:https://github.com/hakimel/reveal.js/archive/${revealjsVersion}.zip!reveal.js-${revealjsVersion}",
                revealjsDir, recursive: true, overwrite: true
        }
        if(!revealjsTemplateDir.exists()) {
            cp "zip:https://github.com/asciidoctor/asciidoctor-reveal.js/archive/${revealjsTemplateVersion}.zip!asciidoctor-reveal.js-${revealjsTemplateVersion}/templates/slim",
                revealjsTemplateDir, recursive: true, overwrite: true
        }

    }

}

download {
    outputs.dir revealjsDir
    outputs.dir revealjsTemplateDir
}

asciidoctor {
  if( !buildDir.exists() ) {
    dependsOn jrubyPrepareGems
    dependsOn download
  }

  gemPath = jrubyPrepareGems.outputDir
//  requires = ['asciidoctor-diagram']
  sources {
    include 'Gradle45min.adoc'
  }

  resources {
    from(sourceDir) {
      include 'images/**'
      include 'styles/**'
      include 'snippets/**'
    }

    from(downloadDir) {
      include 'reveal.js/**'
      include 'asciidoctor-reveal.js/**'
    }
  }

   attributes 'sourcedir' : file('examples'),
              imagesoutdir : 'images',
              'source-highlighter' : 'coderay',
              gradlever : gradle.gradleVersion

    backends 'revealjs'

    options template_dirs : [ revealjsTemplateDir.parentFile.absolutePath ]


}


//task distZip ( type : Zip ) {
//    destinationDir buildDir
//    archiveName 'GradleWorkshop.zip'
//    from projectDir, {
//        include 'src/**'
//        include 'examples/**'
//        include '.repository/**'
//        include 'dists/**'
//        exclude 'examples/*/build'
//        exclude 'examples/*/.gradle'
//    }
//
//    include 'build.gradle'
//    include 'gradle'
//    include 'gradlew*'
//    include 'README.adoc'
//}

//syncRemoteRepositories {
//  repoRoot repositoryFolder
//
//  repositories {
//    jcenter()
//    mavenCentral()
//    maven {
//      url "https://plugins.gradle.org/m2/"
//    }
//  }
//
//  configurations 'examples'
//
//  includeBuildScriptDependencies = false
//}
